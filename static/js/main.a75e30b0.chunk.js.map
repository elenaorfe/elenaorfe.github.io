{"version":3,"sources":["assets/Icono.png","components/Header.js","components/List.js","components/Work.js","components/PersonalProjects.js","components/Courses.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","index_es","id","src","icono","Component","List","props","type","items","map","item","Work","length","index","projectList","_this","this","project","getClassNameProjectContainer","title","duration","components_List","description","skills","_this2","workData","locale","company","name","dateStart","dateEnd","renderCompanyProjects","projects","renderCompanyExperience","PersonalProjects","personalProjectsData","renderPersonalProjects","Courses","coursesData","course","getClassNameCourseContainer","date","renderCourses","Main","components_Work","components_Courses","components_PersonalProjects","Footer","href","target","App","components_Header","components_Main","components_Footer","Boolean","window","location","hostname","match","addLocaleData","concat","Object","toConsumableArray","en","es","language","navigator","languages","userLanguage","languageWithoutRegionCode","toLowerCase","split","messages","localeData","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a75e30b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Icono.cfe07e95.png\";","import React, { Component } from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport icono from '../assets/Icono.png';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className='header'>\n                <div className='container'>\n                    <div className=\"row\">\n                        <div className=\"col-8 col-sm-4\">\n                            <h1><FormattedMessage id=\"header.name\"/></h1>\n                            <h2><FormattedMessage id=\"header.role\"/></h2>\n                        </div>\n                        <div className=\"col-4 col-sm-8\">\n                            <img src={icono} />\n                        </div>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction List (props) {\n    return (\n        <ul className={props.type}>\n          {props.items.map(item => <li>{item}</li>)}\n         </ul> \n      ); \n}\n\nexport default List;\n","import React, { Component } from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport workData from '../assets/data/work.json';\nimport List from './List.js';\n\nclass Work extends Component {\n    getClassNameProjectContainer(length, index) {\n        // Add 'separator' class if it's not the latest element\n        return (length > index) ? 'project container separator' : 'project container';\n    }\n\n    renderCompanyProjects(projectList) {\n        return projectList.map((project,index) => {\n            return(\n                <div className={this.getClassNameProjectContainer(projectList.length, index + 1)}>\n                    <p className='d-inline'>{project.title} </p> \n                    <p className='subtitle d-inline'>| {project.duration}</p>\n                    <List items={project.description} type='default'/>\n                    <List items={project.skills} type='bullet'/>\n                </div>\n            );\n        })\n    }\n\n    renderCompanyExperience() {\n        return workData[this.props.locale].map(company => {\n            return (\n                <div className='company container'>\n                    <div className='title'>\n                        <h4 className='d-inline'>{company.name} </h4> \n                        <p className='subtitle d-inline'>| {company.dateStart} - {company.dateEnd}</p>\n                    </div>\n                    {this.renderCompanyProjects(company.projects)}\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className='box'>\n                <div className='text-center'>\n                    <h3><FormattedMessage id=\"main.experience.title\"/></h3>\n                </div>\n                {this.renderCompanyExperience()}\n            </div>\n        );\n    }\n}\n\nexport default Work;\n","import React, { Component } from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport personalProjectsData from '../assets/data/personal-projects.json';\nimport List from './List.js';\n\nclass PersonalProjects extends Component {\n    renderPersonalProjects() {\n        return personalProjectsData[this.props.locale].map(project => {\n            return (\n                <div className='project container'>\n                    <div className='title'>\n                        <h4 className='d-inline'>{project.title} </h4> \n                        <p className='subtitle d-inline'>| {project.description}</p>\n                    </div>\n                    <List items={project.skills} type='bullet'/>\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className='box'>\n                <div className='text-center'>\n                    <h3><FormattedMessage id=\"main.personalprojects.title\"/></h3>\n                </div>\n                {this.renderPersonalProjects()}\n            </div>\n        );\n    }\n}\n\nexport default PersonalProjects;\n","import React, { Component } from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport coursesData from '../assets/data/courses.json';\nimport List from './List.js';\n\nclass Courses extends Component {\n    getClassNameCourseContainer(length, index) {\n        // Add 'separator' class if it's not the latest element\n        return (length > index) ? 'course container separator' : 'course container';\n    }\n\n    renderCourses() {\n        return coursesData[this.props.locale].map((course,index) => {\n            return (\n                <div className={this.getClassNameCourseContainer(coursesData[this.props.locale].length, index + 1)}>\n                    <div className='title'>\n                        <h4 className='d-inline'>{course.title} </h4> \n                        <p className='subtitle d-inline'> - {course.description} | {course.date}</p>\n                        <List items={course.skills} type='bullet'/>\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className='box'>\n                <div className='text-center'>\n                    <h3><FormattedMessage id=\"main.learning.title\"/></h3>\n                </div>\n                {this.renderCourses()}\n            </div>\n        );\n    }\n}\n\nexport default Courses;\n","import React, { Component } from 'react';\nimport Work from './Work';\nimport PersonalProjects from './PersonalProjects';\nimport Courses from './Courses';\n\nclass Main extends Component {\n    render() {\n        return (\n            <div className='main'>\n                <div className='intro'></div>\n                <div className='container'>\n                    <Work locale={this.props.locale} />\n                    <Courses locale={this.props.locale} />\n                    <PersonalProjects locale={this.props.locale} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer className='footer'>\n                <div className='container text-center'>\n                    <a href='mailto:elenaorfe@gmail.com'>\n                        <i className='far fa-envelope' />\n                    </a>\n                    <a href='https://linkedin.com/in/elenaorfe' className='not-light' target='_blank'>\n                        <i className='fab fa-linkedin-in' />\n                    </a>\n                    <a href='https://github.com/elenaorfe' className='not-light' target='_blank'>\n                        <i className='fab fa-github' />\n                    </a>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport './styles/_styles.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Main locale={this.props.locale}/>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport en from 'react-intl/locale-data/en';\nimport es from 'react-intl/locale-data/es';\n\nimport localeData from './assets/i18n.json';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\naddLocaleData([...en, ...es]);\n// Define user's language\nconst language = (navigator.languages && navigator.languages[0]) ||\n    navigator.language ||\n    navigator.userLanguage;\n\n// Split locales with a region code\nconst languageWithoutRegionCode = language.toLowerCase().split(/[_-]+/)[0];\n\n// Try full locale, fallback to locale without region code, fallback to en\nconst messages = localeData[language] || localeData[languageWithoutRegionCode] || localeData.en;\n\nReactDOM.render(\n    <IntlProvider locale={language} messages={messages}>\n        <App locale={language}/>\n    </IntlProvider>,\n    document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}